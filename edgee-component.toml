manifest-version = 1

[component]
name = "Meta Capi"
version = "1.1.0"
category = "data-collection"
subcategory = "conversion-api"
description = """
# Meta CAPI Component

[https://www.edgee.cloud/edgee/meta-capi](https://www.edgee.cloud/edgee/meta-capi)

## Overview

The **Meta Conversions API (CAPI)** component by Edgee enables server-to-server event tracking by sending your conversion data directly to Meta CAPI from the edge.
This method enhances data accuracy and reliability by bypassing browser limitations such as ad blockers and cookie restrictions, ensuring your marketing analytics remain precise.

---

## Key Features & Benefits

### Features

- **Server-to-Server Integration**: Forwards events directly to Meta Conversions API.
- **Event Mapping**: Supports mapping of Edgee events to Meta CAPI events.
- **User Identification**: Allows use of email, phone, and other identifiers.
- **Edge Execution**: WebAssembly-based for fast, low-latency processing.
- **Test Mode**: Validate event tracking without affecting live data.

### Benefits

- **Reliable Tracking**: Ensures accurate data despite browser-level limitations.
- **Optimized Performance**: Low-latency processing close to the user.
- **Simplified Compliance**: Easier data protection regulation adherence.
- **Minimal Client-Side Load**: Less client-side logic to maintain.

---

## Use Cases

- **Conversion Tracking**: Track conversions from Meta ad campaigns.
- **Attribution Accuracy**: Improve attribution models and analytics.
- **Ad Optimization**: Fine-tune targeting and campaign effectiveness.
- **Privacy-Conscious Collection**: Gather data in environments with strict privacy requirements.

---

Additional resources: [Meta Conversions API](https://developers.facebook.com/docs/marketing-api/conversions-api/)
"""
documentation = "https://www.edgee.cloud/docs/components/data-collection/meta-capi"
repository = "https://github.com/edgee-cloud/meta-capi-component"
wit-version = "1.0.0"
icon-path = "meta.png"
language = "Rust"

[component.build]
command = "cargo build --target wasm32-wasip2 --release && rm -f meta_capi.wasm && cp ./target/wasm32-wasip2/release/meta_capi_component.wasm meta_capi.wasm"
output_path = "meta_capi.wasm"

[component.settings.meta_pixel_id]
title = "Meta Pixel ID"
type = "string"
required = true
description = "The pixel ID for your Meta account"

[component.settings.meta_access_token]
title = "Meta Access Token"
type = "string"
required = true
description = "The access token for your Meta account"

[component.settings.meta_test_event_code]
title = "Meta Test Event Code (optional)"
type = "string"
required = false
description = "The test event code for your Meta account"

